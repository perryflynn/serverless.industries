stages:
  - build
  - deploy
  - cleanup

variables:
  serversshuser: 'ssh-w019308c'
  servername: 'serverless.industries'
  stagedir: '/www/htdocs/w019308c/vhosts/stage.serverless.industries'
  livedir: '/www/htdocs/w019308c/vhosts/serverless.industries'


#
# -> Templates
#

.tpl:default:
  image: reg.git.brickburg.de/bbcontainers/hyde:current
  tags: 
    - docker

.tpl:build:
  extends: .tpl:default
  stage: build
  script:
    - 'export LANG=en_US.UTF-8'
    - 'export LANGUAGE=en_US.UTF-8'
    - 'export LC_ALL=en_US.UTF-8'
    - 'bundle install'
    - 'mkdir dist-${distname}'
    - 'jekyll build -s ./src -d ./dist-${distname} ${buildopts}'
  artifacts:
    name: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
    paths:
      - 'dist-${distname}'

.tpl:sshtask:
  extends: .tpl:default
  before_script:
    - 'mkdir ssh'
    - 'touch ssh/key ssh/hosts'
    - 'chmod u=rwx,go=- ssh'
    - 'chmod u=rw,go=- ssh/key ssh/hosts'
    - 'echo "${SSH_DEPLOY_KEY}" > ssh/key'
    - 'ssh-keyscan -H ${servername} > ssh/hosts'
  after_script:
    - 'rm -rf ssh'
  variables:
    sshopts: '-o UserKnownHostsFile=ssh/hosts -i ssh/key'
    sshremote: '${serversshuser}@${servername}'

.tpl:deploy:
  extends: .tpl:sshtask
  stage: deploy
  script:
    - |
      if [ "$secure" == "1" ]; then
        STAGEUSER="stage"
        STAGEPASS="$(pwgen -s 12 1)"

        ssh ${sshopts} ${sshremote} /bin/bash <<EOF
          if [ -f "${remotedir}/.htpasswd" ]; then
              pwdhash=\$(cat "${remotedir}/.htpasswd")
          fi

          rm -rf "${remotedir}"
          mkdir -p "${remotedir}"

          cat >${remotedir}/.htaccess <<HTEOL
      AuthType Basic
      AuthName "Stage ${CI_COMMIT_REF_SLUG}"
      AuthUserFile ${remotedir}/.htpasswd
      Require valid-user
      HTEOL

          if [ ! -z "\$pwdhash" ]; then
            echo "\$pwdhash" > "${remotedir}/.htpasswd"
            
            echo
            echo
            echo "User/Password already set. Do nothing."
            echo
            echo
          else
            htpasswd -b -c "${remotedir}/.htpasswd" "$STAGEUSER" "$STAGEPASS"
            
            echo
            echo
            echo "Username: $STAGEUSER"
            echo "Password: $STAGEPASS"
            echo
            echo
          fi
      EOF
      fi
    - 'scp -r ${sshopts} dist-${distname}/* ${sshremote}:${remotedir}'

.tpl:cleanup:
  extends: .tpl:sshtask
  stage: cleanup
  script:
    - 'ssh ${sshopts} ${sshremote} rm -rf "${remotedir}"'


#
# -> Jobs
#

# -> Build

build:stage:
  extends: .tpl:build
  except:
    refs:
      - master
  variables:
    buildopts: '--config ./src/_config.yml,./src/_config_staging.yml --baseurl /${CI_COMMIT_REF_SLUG}'
    distname: "stage"

build:prod:
  extends: .tpl:build
  only:
    refs:
      - master
  variables:
    buildopts: "--config ./src/_config.yml"
    distname: "prod"

#-> Deploy

deploy:stage:
  extends: .tpl:deploy
  environment:
    name: stage/${CI_COMMIT_REF_SLUG}
    url: "https://stage.serverless.industries/${CI_COMMIT_REF_SLUG}"
    on_stop: cleanup:stage
  only:
    - branches
  except:
    refs:
      - master
  variables:
    secure: '1'
    distname: "stage"
    remotedir: '${stagedir}/${CI_COMMIT_REF_SLUG}'

deploy:live:
  extends: .tpl:deploy
  environment:
    name: Live
    url: "https://serverless.industries/"
  only:
    refs:
      - master
  variables:
    secure: '0'
    distname: "prod"
    remotedir: '${livedir}'

#-> Cleanup

cleanup:stage:
  extends: .tpl:cleanup
  when: manual
  environment:
    name: stage/${CI_COMMIT_REF_SLUG}
    action: stop
  only:
    - branches
  except:
    - master
  variables:
    remotedir: '${stagedir}/${CI_COMMIT_REF_SLUG}'
