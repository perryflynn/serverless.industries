stages:
  - precheck
  - build
  - deploy
  - cleanup

variables:
  serversshuser: 'ssh-w019308c'
  servername: 'serverless.industries'
  stagedir: '/www/htdocs/w019308c/vhosts/stage.serverless.industries'
  livedir: '/www/htdocs/w019308c/vhosts/serverless.industries'


#
# -> Templates
#

.tpl:default:
  image: reg.git.brickburg.de/bbcontainers/hyde:current
  tags:
    - docker

.tpl:build:
  extends: .tpl:default
  stage: build
  cache:
    key:
      files:
        - Gemfile.lock
        - Gemfile
    paths:
      - vendor
  script:
    # variables
    - 'export LANG=en_US.UTF-8'
    - 'export LANGUAGE=en_US.UTF-8'
    - 'export LC_ALL=en_US.UTF-8'
    - 'export COMMIT_TIME=$(git show -s --format=%ci $CI_COMMIT_SHA)'
    # folders
    - 'mkdir dist-${distname}'
    - 'mkdir -p vendor/ruby'
    # prepare bundler
    - 'sudo gem install bundler'
    - 'bundle config set path vendor/ruby'
    # prepare config
    - 'sed -i "s/__is_ci__/true/g" ./src/_config_ci.yml'
    - 'sed -i "s/__serviceworker_enabled__/$enableserviceworker/g" ./src/_config_ci.yml'
    - 'sed -i "s/__commit_short__/$CI_COMMIT_SHORT_SHA/g" ./src/_config_ci.yml'
    - 'sed -i "s/__commit_long__/$CI_COMMIT_SHA/g" ./src/_config_ci.yml'
    - 'sed -i "s/__commit_timestamp__/$COMMIT_TIME/g" ./src/_config_ci.yml'
    # build
    - 'bundle install'
    - 'bundle exec jekyll build --lsi -s ./src -d ./dist-${distname} ${buildopts}'
  artifacts:
    name: '$CI_JOB_NAME-$CI_COMMIT_REF_SLUG'
    paths:
      - 'dist-${distname}'
  retry: 3

.tpl:sshtask:
  extends: .tpl:default
  before_script:
    - 'mkdir ssh'
    - 'touch ssh/key ssh/hosts'
    - 'chmod u=rwx,go=- ssh'
    - 'chmod u=rw,go=- ssh/key ssh/hosts'
    - 'echo "${SSH_DEPLOY_KEY}" > ssh/key'
    - 'ssh-keyscan -H ${servername} > ssh/hosts'
  after_script:
    - 'rm -rf ssh'
  variables:
    sshopts: '-o UserKnownHostsFile=ssh/hosts -i ssh/key'
    sshremote: '${serversshuser}@${servername}'

.tpl:deploy:
  extends: .tpl:sshtask
  stage: deploy
  script:
    - 'ssh ${sshopts} ${sshremote} "mkdir -p ${remotedir}"'
    - '/bin/bash ci/secure-stage.sh'
    - 'rsync -rltzv --delete -e "ssh ${sshopts}" dist-${distname}/ ${sshremote}:${remotedir}'
    - 'rm -f dist-${distname}/newhtpasswd'

.tpl:cleanup:
  extends: .tpl:sshtask
  stage: cleanup
  script:
    - 'ssh ${sshopts} ${sshremote} "rm -rf ${remotedir}"'


#
# -> Jobs
#

# -> Build

precheck:masterchecks:
  extends: .tpl:default
  stage: precheck
  script:
    - '[[ ! -f enforce-insecure ]] || (echo "File enforce-insecure is not supported in master branch"; exit 99)'
    - '[[ ! -f enforce-new-password ]] || (echo "File enforce-new-password is not supported in master branch"; exit 99)'
  only:
    - master
    - web
    - schedules

build:stage:
  extends: .tpl:build
  except:
    - master
    - web
    - schedules
  variables:
    buildopts: '--config ./src/_config.yml,./src/_config_staging.yml,./src/_config_ci.yml --baseurl /${CI_COMMIT_REF_SLUG}'
    distname: "stage"
    enableserviceworker: 'false'

build:prod:
  extends: .tpl:build
  only:
    - master
    - web
    - schedules
  variables:
    buildopts: "--config ./src/_config.yml,./src/_config_ci.yml"
    distname: "prod"
    enableserviceworker: 'true'

#-> Deploy

deploy:stage:
  extends: .tpl:deploy
  environment:
    name: stage/${CI_COMMIT_REF_SLUG}
    url: "https://stage.serverless.industries/${CI_COMMIT_REF_SLUG}"
    on_stop: cleanup:stage
  only:
    - branches
  except:
    - master
    - web
    - schedules
  variables:
    secure: '1'
    distname: "stage"
    remotedir: '${stagedir}/${CI_COMMIT_REF_SLUG}'

deploy:live:
  extends: .tpl:deploy
  environment:
    name: Live
    url: "https://serverless.industries/"
  only:
    - master
    - web
    - schedules
  variables:
    secure: '0'
    distname: "prod"
    remotedir: '${livedir}'

#-> Cleanup

cleanup:stage:
  extends: .tpl:cleanup
  when: manual
  environment:
    name: stage/${CI_COMMIT_REF_SLUG}
    action: stop
  only:
    - branches
  except:
    - master
    - web
    - schedules
  variables:
    remotedir: '${stagedir}/${CI_COMMIT_REF_SLUG}'
